@model DealsNZ.Models.DealsModels.StoreViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="card grey lighten-4">

    @using (Html.BeginForm("EditStore", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="card-content black-text">
            <div class="form-horizontal">
                <h4 class="card-title">Edit Store</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.StoreId)
                <div class="row">
                    <div class="col m6 s12">
                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.StoreName, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.StoreName, htmlAttributes: new { @class = "black-text" })
                            @Html.ValidationMessageFor(model => model.StoreName, "", new { @class = "red-text" })
                        </div>
                    </div>
                    <div class="col m6 s12">
                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.Contact, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "black-text" })
                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "red-text", @type = "" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col m4 s12">
                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.Street, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "black-text" })
                            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "red-text", @type = "" })
                        </div>

                    </div>
                    <div class="col m4 s12">
                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.City, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "black-text" })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "red-text", @type = "" })
                        </div>
                    </div>
                    <div class="col m4 s12">
                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.Country, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "black-text" })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "red-text", @type = "" })
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col m6 s12">
                        <div>
                            @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "black-text" })
                            @Html.DropDownListFor(model => model.CompanyId, new SelectList(Model.CompanyList, "CompanyId", "CompanyName"), "select", htmlAttributes: new { @class = "dropdown-button black-text validate", @style = "display:block" })

                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "red-text" })

                        </div>

                    </div>
                    <div class="col m6 s12">
                        <img src="@Url.Content(Model.IdentificationImage)" style="width:80px" />
                    </div>


                </div>
                <div class="card-action">
                    <input type="submit" value="Save" class="btn btn-default" />

                </div>
            </div>

        </div>
        <div class="card-action">

            @Html.ActionLink("Back to List", "Store")



        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
