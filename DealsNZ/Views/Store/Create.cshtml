@model DealsNZ.Models.StoreModel.StoreViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layoutnew.cshtml";
}

<div class="row">
    <div class="col s12 ">
        <div class="card white darken-1">
            <div class="card-content black-text">
                <span class="card-title">Stores</span>
                <div>
                    @using (Html.BeginForm("Create", "Store", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                       

                        <div class="input-field ">                           
                            @Html.TextBoxFor(model => model.StoreName, htmlAttributes: new { @class = "validate"})
                            @Html.LabelFor(model => model.StoreName)
                            @Html.ValidationMessageFor(model => model.StoreName, "", new { @class = "red-text" })
                        </div>

                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.UserId, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.UserId)
                            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "red-text", @type = "" })
                        </div>
                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.Contact, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.Contact)
                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "red-text", @type = "" })
                        </div>
                        

                            @* for address *@
                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.Street, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.Street)
                            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "red-text", @type = "" })
                        </div>

                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.City, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.City)
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "red-text", @type = "" })
                        </div>
                        <div class="input-field ">
                            @Html.TextBoxFor(model => model.Country, htmlAttributes: new { @class = "validate" })
                            @Html.LabelFor(model => model.Country)
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "red-text", @type = "" })
                        </div>
                       
                            <div>
                                @Html.LabelFor(model => model.IdentificationImage)
                                <div>
                                    <i class="material-icons">attach_file</i>
                                    <input type="file" name="Image"/>
                                </div>
                            </div>
                            

                            <div>
                                @Html.LabelFor(model => model.CompanyId)
                                @Html.DropDownListFor(model=>model.CompanyId,new SelectList(Model.CompanyList,"CompanyId","CompanyName"),"select", htmlAttributes: new {@class= "dropdown-button black-text validate", @style = "display:block" })

                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "red-text" })

                            </div>
                            <br />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn waves-effect waves-light" />
                                </div>
                            </div>                        
                    }
                </div>
            </div>
            <div class="card-action">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
